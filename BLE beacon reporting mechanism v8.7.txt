Mechanism to store and select received BLE beacon reports to send to the host (FW v8.7 and newer).
===================================================================================================
		
ble_main.c (no changes w.r.t. v8.6):
	BLE rx event: --> vBleEvtHandler()
	vBleEvtHandler()
		- identify beacons
		- vStoreAdvertiser()
		
	vStoreAdvertiser()
		maintain xKnownDeviceList[] of 50 beacon entries (localiser and distress) with each:
			- beacon ID
			- RSSI[] list
			- payload
			- rx PHY
			- timestamp
		if advertiser already in xKnownDeviceList:
			- add current RSSI to xKnownDeviceList
		else:
			if the list is not full:
				- add advertiser to xKnownDeviceList
			else:
				- trash the advertiser
				
ble_adreport.c:
	Run periodic timer (FILTER_POLL_TIME = 1s) to evaluate xKnownDeviceList to see if an advertiser needs to be reported.
	On timer expiry (event AD_REPORT_CHK):
		for every entry in xKnownDeviceList:
			if first reported sight of advertiser older than uxRssiFilterWindow seconds (uxRssiFilterWindow is a part of usBleRssiCfg):
				- filter the RSSIs and calculate an averager RSSI value to be used
				- parse the advertiser data and classify the advertisers:
					- Localiser beacons: vParseLocBeacon()
					- distress beacons: vParseDistressBeacon()
					- discard all other beacons
				- clear the entry in xKnownDeviceList
				
	vParseLocBeacon():
		- execute any special functions
		- store beacon data vEnterBeaconInBeaconTable():
			- in xBleLocBcnGSM[] for GSM reports
			- in xBleLocBcnBLE[] got BLE beacons
			
	vEnterBeaconInBeaconTable():
|		get index into xBleLocBcnGSM[]/BLE[] table uxGetBeaconTableIndex():
|			if beacon already in table:
|				Option 0:
|					- replace it using current RSSI and timestamp.
|				Option 2:
|					- replace it if current RSSI > RSSI in table using current RSSI and timestamp.
|				Option 3:
|					RSSI_THRES = beacon RSSI_REF + config(RSSI_OFFSET)
|					if current RSSI > RSSI_THRES:
|						- replace it if current RSSI > RSSI in table using current RSSI and timestamp.
|			else if there is space left in the table:
|				- enter it using current RSSI and timestamp.
|			else (no space left):
|				Option 0:
|					- replace the oldest entry with the new one.
|				Option 1 or 2 or 3:
|					- replace the beacon with the lowest RSSI.